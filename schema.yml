openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/album/:
    get:
      operationId: album_list
      tags:
      - album
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
          description: ''
    post:
      operationId: album_create
      tags:
      - album
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Album'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Album'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
  /api/album/{id}/:
    get:
      operationId: album_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Альбом.
        required: true
      tags:
      - album
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    put:
      operationId: album_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Альбом.
        required: true
      tags:
      - album
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Album'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Album'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    patch:
      operationId: album_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Альбом.
        required: true
      tags:
      - album
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAlbum'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAlbum'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAlbum'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    delete:
      operationId: album_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Альбом.
        required: true
      tags:
      - album
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/author/:
    get:
      operationId: author_list
      tags:
      - author
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
          description: ''
    post:
      operationId: author_create
      tags:
      - author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
  /api/author/{id}/:
    get:
      operationId: author_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Автор.
        required: true
      tags:
      - author
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    put:
      operationId: author_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Автор.
        required: true
      tags:
      - author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    patch:
      operationId: author_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Автор.
        required: true
      tags:
      - author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    delete:
      operationId: author_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Автор.
        required: true
      tags:
      - author
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/genre/:
    get:
      operationId: genre_list
      tags:
      - genre
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Genre'
          description: ''
    post:
      operationId: genre_create
      tags:
      - genre
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Genre'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Genre'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Genre'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genre'
          description: ''
  /api/genre/{id}/:
    get:
      operationId: genre_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Жанр.
        required: true
      tags:
      - genre
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genre'
          description: ''
    put:
      operationId: genre_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Жанр.
        required: true
      tags:
      - genre
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Genre'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Genre'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Genre'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genre'
          description: ''
    patch:
      operationId: genre_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Жанр.
        required: true
      tags:
      - genre
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGenre'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGenre'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGenre'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genre'
          description: ''
    delete:
      operationId: genre_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Жанр.
        required: true
      tags:
      - genre
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/label/:
    get:
      operationId: label_list
      tags:
      - label
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Label'
          description: ''
    post:
      operationId: label_create
      tags:
      - label
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Label'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Label'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
  /api/label/{id}/:
    get:
      operationId: label_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Лейбл.
        required: true
      tags:
      - label
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
    put:
      operationId: label_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Лейбл.
        required: true
      tags:
      - label
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Label'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Label'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
    patch:
      operationId: label_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Лейбл.
        required: true
      tags:
      - label
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLabel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLabel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLabel'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
    delete:
      operationId: label_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Лейбл.
        required: true
      tags:
      - label
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/music/:
    get:
      operationId: music_list
      tags:
      - music
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Music'
          description: ''
    post:
      operationId: music_create
      tags:
      - music
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Music'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Music'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Music'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Music'
          description: ''
  /api/music/{id}/:
    get:
      operationId: music_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Музыка.
        required: true
      tags:
      - music
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Music'
          description: ''
    put:
      operationId: music_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Музыка.
        required: true
      tags:
      - music
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Music'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Music'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Music'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Music'
          description: ''
    patch:
      operationId: music_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Музыка.
        required: true
      tags:
      - music
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMusic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMusic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMusic'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Music'
          description: ''
    delete:
      operationId: music_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Музыка.
        required: true
      tags:
      - music
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Album:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
      required:
      - id
      - name
    Author:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        psedonym:
          type: string
          nullable: true
          maxLength: 200
        biography:
          type: string
          nullable: true
      required:
      - id
      - name
    Genre:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name_genre:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
      required:
      - id
      - name_genre
    Label:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          nullable: true
        name:
          type: integer
      required:
      - id
      - name
    Music:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        duration:
          type: number
          format: double
        data_released:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
        label:
          type: string
          maxLength: 200
        author:
          type: integer
        genre:
          type: integer
        album:
          type: integer
      required:
      - album
      - author
      - data_released
      - duration
      - genre
      - id
      - label
      - name
    PatchedAlbum:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
    PatchedAuthor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        psedonym:
          type: string
          nullable: true
          maxLength: 200
        biography:
          type: string
          nullable: true
    PatchedGenre:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name_genre:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
    PatchedLabel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          nullable: true
        name:
          type: integer
    PatchedMusic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        duration:
          type: number
          format: double
        data_released:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
        label:
          type: string
          maxLength: 200
        author:
          type: integer
        genre:
          type: integer
        album:
          type: integer
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
